# vim: foldmethod=marker



# Definitions {{{

snippet => "Class constraint" !w
${1:Class} ${2:variable} => $2
endsnippet

snippet fun "Function definition" !b
-- | ${5:Documentation for '$1'}
$1 :: ${3:Type} -> ${4:Type}
${1:name} ${2:args} = ${6:error "undefined: \`$1' in `!v expand('%')`"}
endsnippet

snippet def "Value definition" !b
-- | ${4:Documentation for $1}
$1 :: ${2:Type}
${1:name} = ${5:error "undefined: \`$1' in `!v expand('%')`"}
endsnippet

# }}} Definitions

# Expressions {{{

snippet \ "Lambda" !w
\\${1:args} -> ${2:expression}
endsnippet

snippet if "Boolean conditional" !w
if ${1:condition} then ${2:true} else ${3:false}
endsnippet

snippet case "Pattern match" !w
case ${1:scrutinee} of
	${2:pattern} -> ${3:expression}
endsnippet

snippet qq "Quasi quote" !w
[${1:quoter}|${2:content}|]
endsnippet

# }}} Expressions
